mc_trees <- sample_mc_trees(observed_data = data,
B = B,
covariate_names = c("x", "y", "z"))
mc_trees %>% tail() %>%
kable(type = "html") %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"),
position = "center", full_width = FALSE)
inf_params_0 <- c(0,0, 0, 0)
best_params <- optim(inf_params_0, fn = general_loglike,
mc_samples_summary = mc_trees,
return_neg = TRUE,
cov_names = c("x", "y", "z"),
method = "L-BFGS-B",
lower = c(-4, -4, -4, -4),
upper = c(4, 4, 4, 4),
hessian = TRUE)
best_params <- optim(inf_params_0, fn = general_loglike,
sampled_data = mc_trees,
return_neg = TRUE,
cov_names = c("x", "y", "z"),
method = "L-BFGS-B",
lower = c(-4, -4, -4, -4),
upper = c(4, 4, 4, 4),
hessian = TRUE)
devtools::load_all()
best_params <- optim(inf_params_0, fn = general_loglike,
sampled_data = mc_trees,
return_neg = TRUE,
cov_names = c("x", "y", "z"),
method = "L-BFGS-B",
lower = c(-4, -4, -4, -4),
upper = c(4, 4, 4, 4),
hessian = TRUE)
usethis::use_test()
devtools::test()
devtools::test()
best_params <- optim(inf_params_0, fn = general_loglike,
mc_trees = mc_trees,
return_neg = TRUE,
cov_names = c("x", "y", "z"),
method = "L-BFGS-B",
lower = c(-4, -4, -4, -4),
upper = c(4, 4, 4, 4),
hessian = TRUE)
?general_loglike
devtools::document()
?general_loglike
devtools::document()
?general_loglike
?color
?general_loglike
devtools::load_all()
?general_loglike
round(best_params$par, 2)
devtools::load_all()
devtools::document()
devtools::document()
devtools::load_all()
devtools::test()
devtools::test()
?general_loglike
devtools::load_all()
lp_ests <- likelihood_profs(best_pars = best_params$par,
max_loglike = -best_params$value,
mc_samples_summary = mc_trees,
alpha = .05,
multiple_outside_transmissions = FALSE)
lp_ests <- likelihood_profs(best_pars = best_params$par,
max_loglike = -best_params$value,
mc_trees = mc_trees,
alpha = .05,
multiple_outside_transmissions = FALSE)
devtools::load_all()
lp_ests <- likelihood_profs(best_pars = best_params$par,
max_loglike = -best_params$value,
mc_trees = mc_trees,
alpha = .05,
multiple_outside_transmissions = FALSE)
devtools::load_all()
lp_ests <- likelihood_profs(best_pars = best_params$par,
max_loglike = -best_params$value,
mc_trees = mc_trees,
covariate_names <- c("x", "y", "z"),
alpha = .05,
multiple_outside_transmissions = FALSE)
devtools::load_all()
lp_ests <- likelihood_profs(best_pars = best_params$par,
max_loglike = -best_params$value,
mc_trees = mc_trees,
covariate_names <- c("x", "y", "z"),
alpha = .05,
multiple_outside_transmissions = FALSE)
devtools::load_all()
lp_ests <- likelihood_profs(best_pars = best_params$par,
max_loglike = -best_params$value,
mc_trees = mc_trees,
covariate_names <- c("x", "y", "z"),
alpha = .05,
multiple_outside_transmissions = FALSE)
traceback()
devtools::load_all()
lp_ests <- likelihood_profs(best_pars = best_params$par,
max_loglike = -best_params$value,
mc_trees = mc_trees,
covariate_names <- c("x", "y", "z"),
alpha = .05,
multiple_outside_transmissions = FALSE)
lp_ests %>% as.data.frame() %>%
kable(type = "html", digits = 2) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"),
position = "center", full_width = FALSE)
pkgdown::build_site()
pkgdown::preview_site()
pkgdown::preview_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::preview_site()
pkgdown::build_article()
pkgdown::build_articles()
folder_name <- "single_output_all15sets"
filenames <- list.files(file.path(folder_name))
getwd()
setwd("paper_results/simulations/")
folder_name <- "single_output_all15sets"
filenames <- list.files(file.path(folder_name))
list.files
list.files()
folder_name <- "single_output_outsider_all15sets"
filenames <- list.files(file.path(folder_name))
filenames
output_list <- lapply(file.path(folder_name, filenames),
readRDS)
View(output_list)
ll <- output_list[[1]]
ll
betas <- colMeans(best_params_mat)
betas <- colMeans(ll$best_params_mat)
betas
ll$set
ll$par_set
betas_med <- apply(ll$best_params_mat, 2, median)
betas_med
lower <- apply(ll$best_params_mat, 2, quantiles, prob = c(.025, .975))
lower <- apply(ll$best_params_mat, 2, quantile, prob = c(.025, .975))
lower
upper <- apply(ll$best_params_mat, 2, quantile, prob = c(.975))
upper
ll$cluster_sizes
ll$cluster_sizes$med
ll$init_params
ll$par_set
df <- lapply(output_list, function(ll){
betas_mean <- colMeans(ll$best_params_mat)
betas_med <- apply(ll$best_params_mat, 2, median)
lower <- apply(ll$best_params_mat, 2, quantile, prob = c(.025))
upper <- apply(ll$best_params_mat, 2, quantile, prob = c(.975))
data.frame(max = ll$cluster_sizes[2],
med = ll$cluster_sizes[1],
q90 = ll$cluster_sizes[3],
p_pos = ll$gamma,
beta0 = ll$par_set[1],
beta1 = ll$par_set[2],
beta0_mean = betas_mean[1],
beta1_mean = betas_mean[2],
beta0_med = betas_med[1],
beta1_med = betas_med[2],
beta0_lower =  lower[1],
beta1_lower = lower[2],
beta0_upper = upper[1],
beta1_upper = upper[2]
)
})
df
df_list <- lapply(output_list, function(ll){
betas_mean <- colMeans(ll$best_params_mat)
betas_med <- apply(ll$best_params_mat, 2, median)
lower <- apply(ll$best_params_mat, 2, quantile, prob = c(.025))
upper <- apply(ll$best_params_mat, 2, quantile, prob = c(.975))
data.frame(max = ll$cluster_sizes[2],
med = ll$cluster_sizes[1],
q90 = ll$cluster_sizes[3],
p_pos = ll$gamma,
beta0 = ll$par_set[1],
beta1 = ll$par_set[2],
beta0_mean = betas_mean[1],
beta1_mean = betas_mean[2],
beta0_med = betas_med[1],
beta1_med = betas_med[2],
beta0_lower =  lower[1],
beta1_lower = lower[2],
beta0_upper = upper[1],
beta1_upper = upper[2]
)
})
df <- do.call('rbind', apply(output_list, function(ll){
betas_mean <- colMeans(ll$best_params_mat)
betas_med <- apply(ll$best_params_mat, 2, median)
lower <- apply(ll$best_params_mat, 2, quantile, prob = c(.025))
upper <- apply(ll$best_params_mat, 2, quantile, prob = c(.975))
data.frame(max = ll$cluster_sizes[2],
med = ll$cluster_sizes[1],
q90 = ll$cluster_sizes[3],
p_pos = ll$gamma,
beta0 = ll$par_set[1],
beta1 = ll$par_set[2],
beta0_mean = betas_mean[1],
beta1_mean = betas_mean[2],
beta0_med = betas_med[1],
beta1_med = betas_med[2],
beta0_lower =  lower[1],
beta1_lower = lower[2],
beta0_upper = upper[1],
beta1_upper = upper[2]
)
}))
df <- do.call('rbind', apply(output_list, function(ll){
betas_mean <- colMeans(ll$best_params_mat)
betas_med <- apply(ll$best_params_mat, 2, median)
lower <- apply(ll$best_params_mat, 2, quantile, prob = c(.025))
upper <- apply(ll$best_params_mat, 2, quantile, prob = c(.975))
data.frame(max = ll$cluster_sizes[2],
med = ll$cluster_sizes[1],
q90 = ll$cluster_sizes[3],
p_pos = ll$gamma,
beta0 = ll$par_set[1],
beta1 = ll$par_set[2],
beta0_mean = betas_mean[1],
beta1_mean = betas_mean[2],
beta0_med = betas_med[1],
beta1_med = betas_med[2],
beta0_lower =  lower[1],
beta1_lower = lower[2],
beta0_upper = upper[1],
beta1_upper = upper[2]
)
}))
df_list <- apply(output_list, function(ll){
betas_mean <- colMeans(ll$best_params_mat)
betas_med <- apply(ll$best_params_mat, 2, median)
lower <- apply(ll$best_params_mat, 2, quantile, prob = c(.025))
upper <- apply(ll$best_params_mat, 2, quantile, prob = c(.975))
data.frame(max = ll$cluster_sizes[2],
med = ll$cluster_sizes[1],
q90 = ll$cluster_sizes[3],
p_pos = ll$gamma,
beta0 = ll$par_set[1],
beta1 = ll$par_set[2],
beta0_mean = betas_mean[1],
beta1_mean = betas_mean[2],
beta0_med = betas_med[1],
beta1_med = betas_med[2],
beta0_lower =  lower[1],
beta1_lower = lower[2],
beta0_upper = upper[1],
beta1_upper = upper[2]
)
})
df_list <- apply(output_list, function(ll){
betas_mean <- colMeans(ll$best_params_mat)
betas_med <- apply(ll$best_params_mat, 2, median)
lower <- apply(ll$best_params_mat, 2, quantile, prob = c(.025))
upper <- apply(ll$best_params_mat, 2, quantile, prob = c(.975))
data.frame(max = ll$cluster_sizes[2],
med = ll$cluster_sizes[1],
q90 = ll$cluster_sizes[3],
p_pos = ll$gamma,
beta0 = ll$par_set[1],
beta1 = ll$par_set[2],
beta0_mean = betas_mean[1],
beta1_mean = betas_mean[2],
beta0_med = betas_med[1],
beta1_med = betas_med[2],
beta0_lower =  lower[1],
beta1_lower = lower[2],
beta0_upper = upper[1],
beta1_upper = upper[2]
)
})
df_list <- lapply(output_list, function(ll){
betas_mean <- colMeans(ll$best_params_mat)
betas_med <- apply(ll$best_params_mat, 2, median)
lower <- apply(ll$best_params_mat, 2, quantile, prob = c(.025))
upper <- apply(ll$best_params_mat, 2, quantile, prob = c(.975))
data.frame(max = ll$cluster_sizes[2],
med = ll$cluster_sizes[1],
q90 = ll$cluster_sizes[3],
p_pos = ll$gamma,
beta0 = ll$par_set[1],
beta1 = ll$par_set[2],
beta0_mean = betas_mean[1],
beta1_mean = betas_mean[2],
beta0_med = betas_med[1],
beta1_med = betas_med[2],
beta0_lower =  lower[1],
beta1_lower = lower[2],
beta0_upper = upper[1],
beta1_upper = upper[2]
)})
df <- do.call('rbind', lapply(output_list, function(ll){
df <- do.call('rbind', lapply(output_list, function(ll){
betas_mean <- colMeans(ll$best_params_mat)
betas_med <- apply(ll$best_params_mat, 2, median)
lower <- apply(ll$best_params_mat, 2, quantile, prob = c(.025))
upper <- apply(ll$best_params_mat, 2, quantile, prob = c(.975))
data.frame(max = ll$cluster_sizes[2],
med = ll$cluster_sizes[1],
q90 = ll$cluster_sizes[3],
p_pos = ll$gamma,
beta0 = ll$par_set[1],
beta1 = ll$par_set[2],
beta0_mean = betas_mean[1],
beta1_mean = betas_mean[2],
beta0_med = betas_med[1],
beta1_med = betas_med[2],
beta0_lower =  lower[1],
beta1_lower = lower[2],
beta0_upper = upper[1],
beta1_upper = upper[2]
)}))
df
rownames(df) <- NULL
df
library(tidyverse)
library(kableExtra)
library(tidyverse)
library(knitr)
library(kableExtra)
df %>% kable("latex", digits = 2, booktabs = TRUE, align = "l",
linesep = "",
col.names = c("Max $|C_m|$",
"Median $|C_m|$",
"90Q $|C_m|$",
"P(+)",
"$\\beta_0$",
"$\\beta_1$",
"Mean $\\hat{\\beta}_0$",
"Mean $\\hat{\\beta}_1$",
"Median $\hat{\\beta}_0$",
"Median $\hat{\\beta}_1",
"2.5Q $\\hat{\\beta}_0$",
"97.5Q  $\\hat{\\beta}_0$",
"2.5Q $\\hat{\\beta}_1$",
"97.5Q $\\hat{\\beta}_1$"
), escape = FALSE,
caption = "Results of simulations where we generate from Model in Eq. \\eqref{eq:sim-mod}.  For each row in the table, we generate 100 sets of outbreak data each with 1000 transmission trees.  To estimate the MLE of $\\bm{\\beta}$, To obtain the confidence interval, we take the 2.5 and 97.5 quantiles over the 100 estimates of $\\bm{\\beta}$.",
label = "sim-results") %>%
kableExtra::kable_styling(latex_options = c("scale_down",
"striped"))
df %>% kable("latex", digits = 2, booktabs = TRUE, align = "l",
linesep = "",
col.names = c("Max $|C_m|$",
"Median $|C_m|$",
"90Q $|C_m|$",
"P(+)",
"$\\beta_0$",
"$\\beta_1$",
"Mean $\\hat{\\beta}_0$",
"Mean $\\hat{\\beta}_1$",
"Median $\hat{\\beta}_0$",
"Median $\hat{\\beta}_1",
"2.5Q $\\hat{\\beta}_0$",
"97.5Q  $\\hat{\\beta}_0$",
"2.5Q $\\hat{\\beta}_1$",
"97.5Q $\\hat{\\beta}_1$"
), escape = FALSE,
caption = "Results of simulations where we generate from Model in Eq. \\eqref{eq:sim-mod}.  For each row in the table, we generate 100 sets of outbreak data each with 1000 transmission trees.  To estimate the MLE of $\\bm{\\beta}$, To obtain the confidence interval, we take the 2.5 and 97.5 quantiles over the 100 estimates of $\\bm{\\beta}$.",
label = "sim-results") %>%
kableExtra::kable_styling(latex_options = c("scale_down",
"striped"))
df %>% kable("latex", digits = 2, booktabs = TRUE, align = "l",
linesep = "",
col.names = c("Max $|C_m|$",
"Median $|C_m|$",
"90Q $|C_m|$",
"P(+)",
"$\\beta_0$",
"$\\beta_1$",
"Mean $\\hat{\\beta}_0$",
"Mean $\\hat{\\beta}_1$",
"Median $\hat{\\beta}_0$",
"Median $\hat{\\beta}_1",
"2.5Q $\\hat{\\beta}_0$",
"97.5Q  $\\hat{\\beta}_0$",
"2.5Q $\\hat{\\beta}_1$",
"97.5Q $\\hat{\\beta}_1$"
), escape = FALSE,
caption = "Results of simulations where we generate from Model in Eq. \\eqref{eq:sim-mod}.  For each row in the table, we generate 100 sets of outbreak data each with 1000 transmission trees.  To estimate the MLE of $\\bm{\\beta}$, To obtain the confidence interval, we take the 2.5 and 97.5 quantiles over the 100 estimates of $\\bm{\\beta}$.",
label = "sim-results")
df %>% kable("latex", digits = 2, booktabs = TRUE, align = "l",
linesep = "",
col.names = c("Max $|C_m|$",
"Median $|C_m|$",
"90Q $|C_m|$",
"P(+)",
"$\\beta_0$",
"$\\beta_1$",
"Mean $\\hat{\\beta}_0$",
"Mean $\\hat{\\beta}_1$",
"Median $\hat{\\beta}_0$",
"Median $\hat{\\beta}_1",
"2.5Q $\\hat{\\beta}_0$",
"97.5Q  $\\hat{\\beta}_0$",
"2.5Q $\\hat{\\beta}_1$",
"97.5Q $\\hat{\\beta}_1$"
), escape = FALSE,
caption = "Results of simulations where we generate from Model in Eq. \\eqref{eq:sim-mod}.  For each row in the table, we generate 100 sets of outbreak data each with 1000 transmission trees.  To estimate the MLE of $\\bm{\\beta}$, To obtain the confidence interval, we take the 2.5 and 97.5 quantiles over the 100 estimates of $\\bm{\\beta}$.",
label = "sim-results")
df %>% kable("latex", digits = 2, booktabs = TRUE, align = "l",
linesep = "",
col.names = c("Max $|C_m|$",
"Median $|C_m|$",
"90Q $|C_m|$",
"P(+)",
"$\\beta_0$",
"$\\beta_1$",
"Mean $\\hat{\\beta}_0$",
"Mean $\\hat{\\beta}_1$",
"Median $\hat{\\beta}_0$",
"Median $\hat{\\beta}_1",
"2.5Q $\\hat{\\beta}_0$",
"97.5Q  $\\hat{\\beta}_0$",
"2.5Q $\\hat{\\beta}_1$",
"97.5Q $\\hat{\\beta}_1$"
), escape = FALSE,
caption = "Results of simulations where we generate from the multiple outside transmissions model.",
label = "sim-results") %>%
kableExtra::kable_styling(latex_options = c("scale_down",
"striped"))
df %>% kable("latex", digits = 2, booktabs = TRUE, align = "l",
linesep = "",
col.names = c("Max $|C_m|$",
"Median $|C_m|$",
"90Q $|C_m|$",
"P(+)",
"$\\beta_0$",
"$\\beta_1$",
"Mean $\\hat{\\beta}_0$",
"Mean $\\hat{\\beta}_1$",
"Median $\\hat{\\beta}_0$",
"Median $\\hat{\\beta}_1",
"2.5Q $\\hat{\\beta}_0$",
"97.5Q  $\\hat{\\beta}_0$",
"2.5Q $\\hat{\\beta}_1$",
"97.5Q $\\hat{\\beta}_1$"
), escape = FALSE,
caption = "Results of simulations where we generate from the multiple outside transmissions model.",
label = "sim-results") %>%
kableExtra::kable_styling(latex_options = c("scale_down",
"striped"))
df %>% select(max) %>%
kable("latex", digits = 2, booktabs = TRUE, align = "l",
linesep = "",
col.names = c("Max $|C_m|$",
"Median $|C_m|$",
"90Q $|C_m|$",
"P(+)",
"$\\beta_0$",
"$\\beta_1$",
"Mean $\\hat{\\beta}_0$",
"Mean $\\hat{\\beta}_1$",
"Median $\\hat{\\beta}_0$",
"Median $\\hat{\\beta}_1$",
"2.5Q $\\hat{\\beta}_0$",
"97.5Q  $\\hat{\\beta}_0$",
"2.5Q $\\hat{\\beta}_1$",
"97.5Q $\\hat{\\beta}_1$"
), escape = FALSE,
caption = "Results of simulations where we generate from the multiple outside transmissions model.",
label = "sim-results") %>%
kableExtra::kable_styling(latex_options = c("scale_down",
"striped"))
df %>% arrange(max %>%
df %>% arrange(max) %>%
kable("latex", digits = 2, booktabs = TRUE, align = "l",
linesep = "",
col.names = c("Max $|C_m|$",
"Median $|C_m|$",
"90Q $|C_m|$",
"P(+)",
"$\\beta_0$",
"$\\beta_1$",
"Mean $\\hat{\\beta}_0$",
"Mean $\\hat{\\beta}_1$",
"Median $\\hat{\\beta}_0$",
"Median $\\hat{\\beta}_1$",
"2.5Q $\\hat{\\beta}_0$",
"97.5Q  $\\hat{\\beta}_0$",
"2.5Q $\\hat{\\beta}_1$",
"97.5Q $\\hat{\\beta}_1$"
), escape = FALSE,
caption = "Results of simulations where we generate from the multiple outside transmissions model.",
label = "sim-results") %>%
kableExtra::kable_styling(latex_options = c("scale_down",
"striped"))
`bootstrap_sims_base_2020-08-31` <- readRDS("~/InfectionTrees/paper_results/simulations/bootstrap_sims_base_2020-08-31.RDS")
View(`bootstrap_sims_base_2020-08-31`)
.1894 * 1.96
`bootstrap_sims_mot_2020-08-31` <- readRDS("~/InfectionTrees/paper_results/simulations/bootstrap_sims_mot_2020-08-31.RDS")
View(`bootstrap_sims_mot_2020-08-31`)
View(`bootstrap_sims_base_2020-08-31`)
View(`bootstrap_sims_base_2020-08-31`)
View(`bootstrap_sims_mot_2020-08-31`)
rank(c(1, 2, 2, 3, 4))
floor(rank(c(1, 2, 2, 3, 4)))
floor(rank(c(1, 1, 2, 2, 9, 11)))
?rank
order(c(1, 1, 2, 2))
devtools::test()
devtools::check()
devtools::check()
devtools::check()
pkgdown::build_articles()
