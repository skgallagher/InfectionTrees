## SKG
## July 31, 2020
## Analyze simulations
## JUNE 15, 2021 UPDATES FOR JCGS REVISION

library(ggplot2)
library(tidyverse)
library(gridExtra)
library(knitr)
library(kableExtra)
library(viridis)


fn <- list.files()
fn <- grep(".RDS", fn, value = TRUE)
out_list <- readRDS(fn[9])



input_df <- out_list[[2]]
input_df$set <- 1:nrow(input_df)


outputs <- out_list[[1]]





## Look at param estimates df

param_df <- dplyr::bind_rows(lapply(outputs, "[[", 1))

data_df <- dplyr::bind_rows(lapply(outputs, "[[", 2)) 

cluster_size_freq <- data_df %>% group_by(n, param_set) %>%
    summarize(freq = sum(freq)) %>%
    arrange(param_set) %>%
    ungroup() %>%
    group_by(param_set) %>%
    mutate(cumsum = cumsum(freq) / sum(freq))


summary_data <- cluster_size_freq %>%
    rename(set = param_set) %>%
    group_by(set) %>%
    summarize(cluster_size_10 = n[which(cumsum > .1)[1]],
              cluster_size_50 = n[which(cumsum > .5)[1]],
              cluster_size_90 = n[which(cumsum > .9)[1]],
              cluster_size_max = max(n)) %>%
    arrange(cluster_size_max) %>%
    select(cluster_size_max, cluster_size_50,
           cluster_size_90, set)


input_df <- dplyr::left_join(summary_data, input_df, by = "set")

summary_df <- param_df %>%
    group_by(set) %>%
    summarize(beta0_med = median(beta_0),
              beta0_low = quantile(beta_0, .025),
              beta0_high = quantile(beta_0, .975),
              beta0_mean = mean(beta_0),
              beta0_var = var(beta_0),
              beta1_med = median(beta_1),
              beta1_low = quantile(beta_1, .025),
              beta1_high = quantile(beta_1, .975),
              beta1_mean = mean(beta_1),
              beta1_var = var(beta_1)) %>%
    dplyr::left_join(input_df, by = "set") %>%
    arrange(cluster_size_max)


summary_df %>% dplyr::select(cluster_size_max,
                             cluster_size_50,
                             cluster_size_90,
                             p_pos, beta_0,
                             beta_1,
                             beta0_mean,
                             beta1_mean,
                             beta0_low,
                             beta0_high,
                             beta1_low,
                             beta1_high) %>%
    knitr::kable("latex", digits = 2, booktabs = TRUE, align = "l",
                 linesep = "",
                 col.names = c("Max $|C_m|$",
                               "Median $|C_m|$",
                               "90Q $|C_m|$",
                               "P(+)",
                               "$\\beta_0$",
                               "$\\beta_1$",
                               "Mean $\\hat{\\beta}_0$",
                               "Mean $\\hat{\\beta}_1$",
                               "2.5Q $\\hat{\\beta}_0$",
                               "97.5Q  $\\hat{\\beta}_0$",
                               "2.5Q $\\hat{\\beta}_1$",
                               "97.5Q $\\hat{\\beta}_1$"
                               ), escape = FALSE,
                 caption = "Results of simulations where we generate from Model in Eq. \\eqref{eq:sim-mod}.  For each row in the table, we generate 100 sets of outbreak data each with 1000 transmission trees.  To estimate the MLE of $\\bm{\\beta}$, To obtain the confidence interval, we take the 2.5 and 97.5 quantiles over the 100 estimates of $\\bm{\\beta}$.",
                 label = "sim-results") %>%
    kableExtra::kable_styling(latex_options = c("scale_down",
                                                "striped"))

## Revisions for JCGS
## Condensing some of the output
summary_df2 <- summary_df %>%
    arrange(max_clusts) %>%
    mutate(size_stats = sprintf(
                                       "(%d, %d, %d)", max_clusts,
                                       cluster_size_90,
                                       cluster_size_50
                                       ))

summary_df %>% dplyr::select(beta_0, beta_1, p_pos,
                             contains("beta0")) %>%
    knitr::kable("markdown", digits = 2)

summary_df %>% dplyr::select(beta_0, beta_1, p_pos,
                             contains("beta1")) %>%
    knitr::kable("markdown", digits = 2)



param_df <- param_df %>% left_join(input_df, by = "set")

my_labs <- unique(paste0("P(+)=", param_df$p_pos,
                        "; ",
                        "$\\beta_0$=",
                        param_df$beta_0.y,
                        "; ",
                        "$\\beta_1$=",
                        param_df$beta_1.y))
my_labs <- unique(paste0("(P(+), $\\beta_0$, $\\beta_1$) = (",
                         round(param_df$p_pos, 2),
                         ", ",
                         round(param_df$beta_0.y, 2),
                         ", ",
                         round(param_df$beta_1.y, 2),
                         ")"))

param_df$set2 <- param_df$set
param_df$set2 <- factor(param_df$set2,
                        levels = unique(param_df$set2),
                        labels = my_labs)

my_labs <- sapply(levels(param_df$set2),
                  latex2exp::TeX)


ggplot(data = param_df)  +
    geom_density_ridges2(aes(x = beta_1.x - beta_1.y,
                             y = set2,
                             fill = factor(set)),
                         scale = .9) +
    scale_fill_viridis(discrete = TRUE,
                       option = "plasma") +
    scale_y_discrete(labels = parse(text = my_labs)) + 
    theme_bw()  + guides(fill = FALSE) +
    geom_vline(xintercept = 0,
               linetype = "dashed", size = 1, col = "darkgray") +
    labs(x = latex2exp::TeX("$\\hat{\\beta}_1 - \\beta_1$"),
         y = "",
         title = "Density estimates",
         subtitle = paste0(input_df$n_sims[1], " simulations")) +
    facet_wrap(~p_pos) +
    theme(axis.text = element_text(size = 18),
          axis.title = element_text(size = 20),
          title = element_text(size = 24),
          strip.text = element_text(size = 14)) +
    xlim(-2, 2)

ggsave("density_ridges.pdf", width = 16, height = 10)



    
   ## +
   ## geom_point(aes(x = factor(set), y = beta_1))
                               
